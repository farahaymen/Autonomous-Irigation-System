#include "DHT.h"  //Library for humidity sensor
//define pins
#define soilMoisture A0
#define rainSensor A1
#define humiditySensor A2
#define waterSensor A4
int relay  = 3;
int moisture;   //variable to store value read from mositure sensor
int rain;   //variable to store value read from rain sensor
int humidity;   //variable to store value read from humidity sensor
int waterLevel; //variable to store value read from water Level sensor
void setup() {
  Serial.begin(9600);
  DDRD = 0b00001000;    //Only relay ->3 is output
  PORTD |= (1 << 3);    //set relay to be turned off by default
}
void loop() {
  moisture = analogRead(soilMoisture);  //read value from mositure sensor
  rain = analogRead(rainSensor);  //read value from rain Sensor
  humidity = analogRead(humiditySensor);  //read value from humidity sensor
  waterLevel = analogRead(waterSensor);   //read value from water Level sensor
  //condition to check if the tank is empty or not
  if (waterLevel < 100)
  {
    Serial.println("Tank is Empty");
  }
  //condition to check if Tank is almost empty
  else if (waterLevel < 200)
  {
    Serial.println("Warning! Tank is almost empty...");
  }
  //condition to check if it's raining
  else if (rain < 100 )
  {
    Serial.println("it's now raining. No need to water the plant.");
  }
  else
  {
      //check if plant is too dry
    if (moisture > 750)
    {
      pumpWater(5000);  //call function that activates the relay to open the water pump
    }
    //check if plant in range that needs to be watered
    else if (moisture < 750 && moisture > 500 )
    {
      //check if humidity is not too high
      if (humidity > 50)
      {
        pumpWater(2000);
      }
      //checks if humidity is high
      else
      {
        pumpWater(4000);
      }
    }
  }
  delay(2000);
}
//function that activates the relay to open the water pump and deactiviates it aghain
void pumpWater(int milliSeconds)
{
  PORTD |= (1 << 3);  // 00000000 | 00001000 == 00001000
  delay(milliSeconds);
  PORTD &= ~(1 << 3); //00000000 & 11110111 == 00000000 */

}